/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcnproject;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 *
 * @author Abduulah Jan
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    
    static Socket client;
    static DataInputStream din;
    static DataOutputStream dout;
    
    boolean mth=true, eng=true, phy=true, geo=true, his=true;
    static boolean turn = false;
    int count=0;
    int total=0;
    static String name="";
    
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mathsLbl = new javax.swing.JLabel();
        physicsLbl = new javax.swing.JLabel();
        englishlbl = new javax.swing.JLabel();
        geographyLbl = new javax.swing.JLabel();
        hidtoryLbl = new javax.swing.JLabel();
        math100 = new javax.swing.JButton();
        math200 = new javax.swing.JButton();
        math300 = new javax.swing.JButton();
        math400 = new javax.swing.JButton();
        math500 = new javax.swing.JButton();
        phy100 = new javax.swing.JButton();
        phy200 = new javax.swing.JButton();
        phy300 = new javax.swing.JButton();
        phy400 = new javax.swing.JButton();
        phy500 = new javax.swing.JButton();
        eng100 = new javax.swing.JButton();
        eng200 = new javax.swing.JButton();
        eng300 = new javax.swing.JButton();
        eng400 = new javax.swing.JButton();
        eng500 = new javax.swing.JButton();
        geo100 = new javax.swing.JButton();
        geo200 = new javax.swing.JButton();
        geo300 = new javax.swing.JButton();
        geo400 = new javax.swing.JButton();
        geo500 = new javax.swing.JButton();
        his100 = new javax.swing.JButton();
        his200 = new javax.swing.JButton();
        his300 = new javax.swing.JButton();
        his400 = new javax.swing.JButton();
        his500 = new javax.swing.JButton();
        namelbl = new javax.swing.JLabel();
        turnlbl = new javax.swing.JLabel();
        scorelbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));

        mathsLbl.setText("Maths");

        physicsLbl.setText("Physics");

        englishlbl.setText("English");

        geographyLbl.setText("Geography");

        hidtoryLbl.setText("History");

        math100.setText("100$");
        math100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                math100ActionPerformed(evt);
            }
        });

        math200.setText("200$");
        math200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                math200ActionPerformed(evt);
            }
        });

        math300.setText("300$");
        math300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                math300ActionPerformed(evt);
            }
        });

        math400.setText("400$");
        math400.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                math400ActionPerformed(evt);
            }
        });

        math500.setText("500$");
        math500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                math500ActionPerformed(evt);
            }
        });

        phy100.setText("100$");
        phy100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phy100ActionPerformed(evt);
            }
        });

        phy200.setText("200$");
        phy200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phy200ActionPerformed(evt);
            }
        });

        phy300.setText("300$");
        phy300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phy300ActionPerformed(evt);
            }
        });

        phy400.setText("400$");
        phy400.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phy400ActionPerformed(evt);
            }
        });

        phy500.setText("500$");
        phy500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phy500ActionPerformed(evt);
            }
        });

        eng100.setText("100$");
        eng100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eng100ActionPerformed(evt);
            }
        });

        eng200.setText("200$");
        eng200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eng200ActionPerformed(evt);
            }
        });

        eng300.setText("300$");
        eng300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eng300ActionPerformed(evt);
            }
        });

        eng400.setText("400$");
        eng400.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eng400ActionPerformed(evt);
            }
        });

        eng500.setText("500$");
        eng500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eng500ActionPerformed(evt);
            }
        });

        geo100.setText("100$");
        geo100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geo100ActionPerformed(evt);
            }
        });

        geo200.setText("200$");
        geo200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geo200ActionPerformed(evt);
            }
        });

        geo300.setText("300$");
        geo300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geo300ActionPerformed(evt);
            }
        });

        geo400.setText("400$");
        geo400.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geo400ActionPerformed(evt);
            }
        });

        geo500.setText("500$");
        geo500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geo500ActionPerformed(evt);
            }
        });

        his100.setText("100$");
        his100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                his100ActionPerformed(evt);
            }
        });

        his200.setText("200$");
        his200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                his200ActionPerformed(evt);
            }
        });

        his300.setText("300$");
        his300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                his300ActionPerformed(evt);
            }
        });

        his400.setText("400$");
        his400.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                his400ActionPerformed(evt);
            }
        });

        his500.setText("500$");
        his500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                his500ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mathsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(physicsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(math100)
                                .addGap(18, 18, 18)
                                .addComponent(phy100)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(eng100)
                                .addGap(18, 18, 18)
                                .addComponent(geo100))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(englishlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(geographyLbl)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(his100)
                            .addComponent(hidtoryLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(math300)
                        .addGap(18, 18, 18)
                        .addComponent(phy300)
                        .addGap(18, 18, 18)
                        .addComponent(eng300)
                        .addGap(18, 18, 18)
                        .addComponent(geo300)
                        .addGap(18, 18, 18)
                        .addComponent(his300))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(math200)
                        .addGap(18, 18, 18)
                        .addComponent(phy200)
                        .addGap(18, 18, 18)
                        .addComponent(eng200)
                        .addGap(18, 18, 18)
                        .addComponent(geo200)
                        .addGap(18, 18, 18)
                        .addComponent(his200))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(math400)
                                .addGap(18, 18, 18)
                                .addComponent(phy400)
                                .addGap(18, 18, 18)
                                .addComponent(eng400)
                                .addGap(18, 18, 18)
                                .addComponent(geo400))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(math500)
                                .addGap(18, 18, 18)
                                .addComponent(phy500)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(eng500)
                                .addGap(18, 18, 18)
                                .addComponent(geo500)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(his500)
                            .addComponent(his400))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mathsLbl)
                    .addComponent(physicsLbl)
                    .addComponent(englishlbl)
                    .addComponent(geographyLbl)
                    .addComponent(hidtoryLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(math100)
                    .addComponent(phy100)
                    .addComponent(eng100)
                    .addComponent(geo100)
                    .addComponent(his100))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(math200)
                    .addComponent(phy200)
                    .addComponent(eng200)
                    .addComponent(geo200)
                    .addComponent(his200))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(math300)
                    .addComponent(phy300)
                    .addComponent(eng300)
                    .addComponent(geo300)
                    .addComponent(his300))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(math400)
                    .addComponent(phy400)
                    .addComponent(eng400)
                    .addComponent(geo400)
                    .addComponent(his400))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(math500)
                    .addComponent(phy500)
                    .addComponent(eng500)
                    .addComponent(geo500)
                    .addComponent(his500))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        namelbl.setText("Name: ");

        turnlbl.setText("Turn: ");

        scorelbl.setText("Score: ");

        jLabel2.setText("Jeopardy Quiz Project");

        startbtn.setText("Start");
        startbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(turnlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scorelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startbtn))
            .addGroup(layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namelbl)
                    .addComponent(turnlbl)
                    .addComponent(scorelbl)
                    .addComponent(startbtn))
                .addGap(3, 3, 3)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void math300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_math300ActionPerformed
        // TODO add your handling code here:
        if (mth && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            math300.setEnabled(false);
            try {
                dout.writeUTF("m300");
            } catch (IOException ex) {
            }
            mth=false;
            total+=300;
            scorelbl.setText("Score : "+(total));
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_math300ActionPerformed

    private void math100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_math100ActionPerformed
        // TODO add your handling code here:
        if (mth && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            math100.setEnabled(false);
            mth=false;
            total+=100;
            scorelbl.setText("Score : "+(total));            
            try {
                dout.writeUTF("m100");
            } catch (IOException ex) {
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_math100ActionPerformed

    private void phy400ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phy400ActionPerformed
        // TODO add your handling code here:
        if(phy&&turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            total+=400;
            phy400.setEnabled(false);
            try {
                dout.writeUTF("p400");
            } catch (IOException ex) {
            }
            phy=false;
            scorelbl.setText("Score: "+(total));
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_phy400ActionPerformed

    private void eng400ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eng400ActionPerformed
        // TODO add your handling code here:
        if (eng&&turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            eng400.setEnabled(false);
            try {
                dout.writeUTF("e400");
            } catch (IOException ex) {
            }
            eng=false;
            total+=400;
            scorelbl.setText("Score : "+(total));
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_eng400ActionPerformed

    private void geo200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geo200ActionPerformed
        // TODO add your handling code here:
        if (geo && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            geo200.setEnabled(false);
            try {
                dout.writeUTF("g200");
            } catch (IOException ex) {
            }
            geo=false;
            total+=200;
            scorelbl.setText("Score: "+(total));
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_geo200ActionPerformed

    private void geo500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geo500ActionPerformed
        // TODO add your handling code here:
        if (geo && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            geo500.setEnabled(false);
            geo = false;
            try {
                dout.writeUTF("g500");
            } catch (IOException ex) {
            }
            total+=500;
            scorelbl.setText("Score : "+(total));
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_geo500ActionPerformed

    private void math200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_math200ActionPerformed
        // TODO add your handling code here:
        if (mth && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            math200.setEnabled(false);
            mth=false;
            try {
                dout.writeUTF("m200");
            } catch (IOException ex) {
            }
            total+=200;
            scorelbl.setText("Score: "+(total));
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_math200ActionPerformed

    private void math400ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_math400ActionPerformed
        // TODO add your handling code here:
        if (mth && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            math400.setEnabled(false);
            try {
                dout.writeUTF("m400");
            } catch (IOException ex) {
            }
            mth=false;
            total+=400;
            scorelbl.setText("Score : "+(total));
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_math400ActionPerformed

    private void math500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_math500ActionPerformed
        // TODO add your handling code here:
        if (mth && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            math500.setEnabled(false);
            try {
                dout.writeUTF("m500");
            } catch (IOException ex) {
            }
            mth=false;
            total+=500;
            scorelbl.setText("Score : "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_math500ActionPerformed

    private void phy100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phy100ActionPerformed
        // TODO add your handling code here:
        if (phy && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            phy100.setEnabled(false);
            try {
                dout.writeUTF("p100");
            } catch (IOException ex) {
            }
            phy=false;
            total+=100;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_phy100ActionPerformed

    private void phy200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phy200ActionPerformed
        // TODO add your handling code here:
        if (phy && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            phy200.setEnabled(false);
            try {
                dout.writeUTF("p200");
            } catch (IOException ex) {
            }
            phy=false;
            total+=200;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_phy200ActionPerformed

    private void phy300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phy300ActionPerformed
        // TODO add your handling code here:
        if (phy && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            phy300.setEnabled(false);
            try {
                dout.writeUTF("p300");
            } catch (IOException ex) {
            }
            phy=false;
            total+=300;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_phy300ActionPerformed

    private void phy500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phy500ActionPerformed
        // TODO add your handling code here:
        if (phy && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            phy500.setEnabled(false);
            try {
                dout.writeUTF("p500");
            } catch (IOException ex) {
            }
            phy=false;
            total+=500;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_phy500ActionPerformed

    private void eng100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eng100ActionPerformed
        // TODO add your handling code here:
        if (eng && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            eng100.setEnabled(false);
            try {
                dout.writeUTF("e100");
            } catch (IOException ex) {
            }
            eng=false;
            total+=100;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_eng100ActionPerformed

    private void eng200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eng200ActionPerformed
        // TODO add your handling code here:
        if (eng && turn ){
            JOptionPane.showInputDialog("Enter Name To Continue");
            eng200.setEnabled(false);
            try {
                dout.writeUTF("e200");
            } catch (IOException ex) {
            }
            eng=false;
            total+=200;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_eng200ActionPerformed

    private void eng300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eng300ActionPerformed
        // TODO add your handling code here:
        if (eng && turn ){
            JOptionPane.showInputDialog("Enter Name To Continue");
            eng300.setEnabled(false);
            try {
                dout.writeUTF("e300");
            } catch (IOException ex) {
            }
            eng = false;
            total+=300;
            scorelbl.setText("Score : "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_eng300ActionPerformed

    private void eng500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eng500ActionPerformed
        // TODO add your handling code here:
        if (eng && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            eng500.setEnabled(false);
            try {
                dout.writeUTF("e500");
            } catch (IOException ex) {
            }
            eng=false;
            total+=500;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_eng500ActionPerformed

    private void geo100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geo100ActionPerformed
        // TODO add your handling code here:
        if (geo && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            geo100.setEnabled(false);
            try {
                dout.writeUTF("g100");
            } catch (IOException ex) {
            }
            eng=false;
            total+=100;
            scorelbl.setText("Score : "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_geo100ActionPerformed

    private void geo300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geo300ActionPerformed
        // TODO add your handling code here:
        if (geo && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            geo300.setEnabled(false);
            try {
                dout.writeUTF("g300");
            } catch (IOException ex) {
            }
            geo=false;            
            total+=300;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_geo300ActionPerformed

    private void geo400ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geo400ActionPerformed
        // TODO add your handling code here:
        if (geo && turn ){
            JOptionPane.showInputDialog("Enter Name To Continue");
            geo400.setEnabled(false);
            try {
                dout.writeUTF("g400");
            } catch (IOException ex) {
            }
            geo=false;
            total+=400;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_geo400ActionPerformed

    private void his100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_his100ActionPerformed
        // TODO add your handling code here:
        if (his && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            his100.setEnabled(false);
            try {
                dout.writeUTF("h100");
            } catch (IOException ex) {
            }
            his = false;
            total+=100;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_his100ActionPerformed

    private void his200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_his200ActionPerformed
        // TODO add your handling code here:
        if (his && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            his200.setEnabled(false);
            try {
                dout.writeUTF("h200");
            } catch (IOException ex) {
            }
            total+=200;
            scorelbl.setText("Score: "+(total));            
            his=false;
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_his200ActionPerformed

    private void his300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_his300ActionPerformed
        // TODO add your handling code here:
        if (his && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            his300.setEnabled(false);
            try {
                dout.writeUTF("h300");
            } catch (IOException ex) {
            }
            his = false;
            total+=300;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_his300ActionPerformed

    private void his400ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_his400ActionPerformed
        // TODO add your handling code here:
        if (his && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            his400.setEnabled(false);
            try {
                dout.writeUTF("h400");
            } catch (IOException ex) {
            }
            his=false;
            total+=400;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_his400ActionPerformed

    private void his500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_his500ActionPerformed
        // TODO add your handling code here:
        if (his && turn){
            JOptionPane.showInputDialog("Enter Name To Continue");
            his500.setEnabled(false);
            try {
                dout.writeUTF("h500");
            } catch (IOException ex) {
            }
            his = false;
            total+=500;
            scorelbl.setText("Score: "+(total));            
        }
        else {
            JOptionPane.showMessageDialog(this, "Your Turn Has Passed or is Yet to Come");
        }
    }//GEN-LAST:event_his500ActionPerformed

    private void startbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startbtnActionPerformed
        // TODO add your handling code here:
        namelbl.setText(name);
        turnlbl.setText("Trun: "+Boolean.toString(turn));
    }//GEN-LAST:event_startbtnActionPerformed
        
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Client().setVisible(true);
            }
        });
        try {
            client = new Socket("127.0.0.1",1812);
            din = new DataInputStream(client.getInputStream());
            dout = new DataOutputStream(client.getOutputStream());
            Thread lockBtn = new Thread(new Runnable() {
                @Override
                public void run() {
                    while (true){
                        try{
                            String msg = din.readUTF();
                            if (msg.equalsIgnoreCase("true")){
                                turn = true;
                                JOptionPane.showMessageDialog(null, "It is Your Turn Press Start To GET Started");
                            }
                            else if (msg.equalsIgnoreCase("false")){
                                turn = false;
                            }
                            else if (msg.contains("Name")){
                                System.out.println(msg);
                                name = msg;
                            }
                            else{
                                switch (msg){
                                    case "m100":
                                        math100.setEnabled(false);
                                        break;
                                    case "m200":
                                        math200.setEnabled(false);
                                        break;
                                    case "m300":
                                        math300.setEnabled(false);
                                        break;
                                    case "m400":
                                        math400.setEnabled(false);
                                        break;
                                    case "m500":
                                        math500.setEnabled(false);
                                        break;
                                    case "p100":
                                        phy100.setEnabled(false);
                                        break;
                                    case "p200":
                                        phy200.setEnabled(false);
                                        break;
                                    case "p300":
                                        phy300.setEnabled(false);
                                        break;
                                    case "p400":
                                        phy400.setEnabled(false);
                                        break;
                                    case "p500":
                                        phy500.setEnabled(false);
                                        break;
                                    case "e100":
                                        eng100.setEnabled(false);
                                        break;
                                    case "e200":
                                        eng200.setEnabled(false);
                                        break;
                                    case "e300":
                                        eng300.setEnabled(false);
                                        break;
                                    case "e400":
                                        eng400.setEnabled(false);
                                        break;
                                    case "e500":
                                        eng500.setEnabled(false);
                                        break;
                                    case "g100":
                                        geo100.setEnabled(false);
                                        break;
                                    case "g200":
                                        geo200.setEnabled(false);
                                        break;
                                    case "g300":
                                        geo300.setEnabled(false);
                                        break;
                                    case "g400":
                                        geo400.setEnabled(false);
                                        break;
                                    case "g500":
                                        geo500.setEnabled(false);
                                        break;
                                    case "h100":
                                        his100.setEnabled(false);
                                        break;
                                    case "h200":
                                        his200.setEnabled(false);
                                        break;
                                    case "h300":
                                        his300.setEnabled(false);
                                        break;
                                    case "h400":
                                        his400.setEnabled(false);
                                        break;
                                    case "h500":
                                        his500.setEnabled(false);
                                        break;
                                }
                            }
                        }
                        catch(IOException ex){
                        }
                    }
                }
            });
            lockBtn.start();
        }catch(IOException ex){
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton eng100;
    private static javax.swing.JButton eng200;
    private static javax.swing.JButton eng300;
    private static javax.swing.JButton eng400;
    private static javax.swing.JButton eng500;
    private javax.swing.JLabel englishlbl;
    private static javax.swing.JButton geo100;
    private static javax.swing.JButton geo200;
    private static javax.swing.JButton geo300;
    private static javax.swing.JButton geo400;
    private static javax.swing.JButton geo500;
    private javax.swing.JLabel geographyLbl;
    private javax.swing.JLabel hidtoryLbl;
    private static javax.swing.JButton his100;
    private static javax.swing.JButton his200;
    private static javax.swing.JButton his300;
    private static javax.swing.JButton his400;
    private static javax.swing.JButton his500;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private static javax.swing.JButton math100;
    private static javax.swing.JButton math200;
    private static javax.swing.JButton math300;
    private static javax.swing.JButton math400;
    private static javax.swing.JButton math500;
    private javax.swing.JLabel mathsLbl;
    private javax.swing.JLabel namelbl;
    private static javax.swing.JButton phy100;
    private static javax.swing.JButton phy200;
    private static javax.swing.JButton phy300;
    private static javax.swing.JButton phy400;
    private static javax.swing.JButton phy500;
    private javax.swing.JLabel physicsLbl;
    private javax.swing.JLabel scorelbl;
    private javax.swing.JButton startbtn;
    private javax.swing.JLabel turnlbl;
    // End of variables declaration//GEN-END:variables
}
